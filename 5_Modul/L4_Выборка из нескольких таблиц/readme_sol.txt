Задание 1
В целом подход правильный, запросы написаны правильно.
Отвечаю на ваши вопросы:

Все исполнители, которые не выпустили альбомы в 2020 году.

Для получения списка исполнителей, которые не выпустили альбомы в 2020 году, можно использовать следующий запрос SQL. Здесь мы используем подзапрос в NOT EXISTS для идентификации исполнителей, не связанных с альбомами 2020 года, исключая их из результатов:

1
2
3
4
5
6
7
8
SELECT s.id, s.pseudonym
FROM singer s
WHERE NOT EXISTS (
    SELECT 1
    FROM album_singer as
    INNER JOIN album a ON as.albumId = a.id
    WHERE as.singerId = s.id AND a.year_album = 2020
);
Этот запрос работает следующим образом:

Основной запрос выбирает id и pseudonym из таблицы singer.
WHERE NOT EXISTS используется для фильтрации тех исполнителей, для которых существуют записи в album_singer, связанные с альбомами 2020 года в таблице album.
Внутри NOT EXISTS, подзапрос ищет записи в album_singer, которые связывают исполнителя (singerId) с альбомами (albumId), где год альбома равен 2020. Если такие записи найдены для исполнителя, этот исполнитель исключается из результата основного запроса.
Исполнитель или исполнители, написавшие самый короткий по продолжительности трек, — теоретически таких треков может быть несколько.

Для того чтобы найти исполнителя или исполнителей, написавших самый короткий по продолжительности трек, можно использовать такой запрос: запрос сначала определяет минимальную продолжительность трека из таблицы music_track, а затем находит все треки с этой минимальной продолжительностью и соответствующих им исполнителей.

Попробуйте написать код такого запроса самостоятельно.

Названия альбомов, содержащих наименьшее количество треков.

Для нахождения названий альбомов, содержащих наименьшее количество треков, можно использовать следующую стратегию SQL запроса. Этот запрос сначала считает количество треков в каждом альбоме, затем определяет минимальное количество треков среди альбомов и, наконец, выбирает названия альбомов, имеющих это минимальное количество треков:

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
WITH TrackCount AS (
    SELECT
        albumId,
        COUNT(id) AS NumberOfTracks
    FROM music_track
    GROUP BY albumId
),
MinTrackCount AS (
    SELECT MIN(NumberOfTracks) AS MinTracks
    FROM TrackCount
)
SELECT a.name_album
FROM album a
INNER JOIN TrackCount tc ON a.id = tc.albumId
INNER JOIN MinTrackCount mtc ON tc.NumberOfTracks = mtc.MinTracks;
Как работает этот запрос:

With TrackCount: Первая CTE (Common Table Expression), TrackCount, подсчитывает количество треков (COUNT(id)) для каждого альбома (GROUP BY albumId) в таблице music_track.

With MinTrackCount: Вторая CTE, MinTrackCount, находит минимальное количество треков среди всех альбомов (SELECT MIN(NumberOfTracks)), используя результаты первой CTE.

Основной запрос: Затем основной запрос выбирает названия альбомов (name_album) из таблицы album, которые соответствуют критерию минимального количества треков. Это делается путем внутреннего соединения (INNER JOIN) таблицы album с CTE TrackCount и MinTrackCount на основе идентификатора альбома и условия соответствия минимальному количеству треков.

Этот подход позволяет точно определить названия альбомов с наименьшим количеством треков в базе данных.